import java.util.*;

public class Knapsack01 {

	public static int maxValue(int i, int W, int wt[], int val[],int dp[][]){
        if(i==0){
            if(wt[0]<=W) return val[0];
            else return 0;
        }
        if(dp[i][W]!=-1) return dp[i][W];
        int notTake = 0+maxValue(i-1,W,wt,val,dp);
        int take = Integer.MIN_VALUE;
        if(wt[i]<=W){
            take = val[i] + maxValue(i-1,W-wt[i],wt,val,dp);
        }
        
        return dp[i][W] = Math.max(take,notTake);
    }    
    
    static int knapSack(int W, int wt[], int val[], int n) 
    { 
        int dp[][] = new int[n][W+1];
        for(int row[] : dp){
            Arrays.fill(row,-1);
        }
        return maxValue(n-1,W,wt,val,dp);
        
      }
 
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter the number of items: ");
        int n = sc.nextInt();
        System.out.println("Enter the items weights: ");
        int []wt = new int[n];
        for(int i=0; i<n; i++)
            wt[i] = sc.nextInt();
 
        System.out.println("Enter the items values: ");
        int []val = new int[n];
        for(int i=0; i<n; i++)
            val[i] = sc.nextInt();
 
        System.out.println("Enter the maximum capacity: ");
        int W = sc.nextInt();
 
        System.out.println("The maximum value is: " + knapSack(W, wt, val, n));
    }


}
