import java.util.ArrayList;

public class dfsGraph {
	public static void dfs(int node, ArrayList<Integer> list, boolean vis[], ArrayList<ArrayList<Integer>> adj ){
        vis[node] = true;
        list.add(node);
        for(int i : adj.get(node)){
            if(vis[i]==false){
                dfs(i,list,vis,adj);
            }
        }
    }
    public static ArrayList<Integer> dfsTraversal(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
        ArrayList<Integer> list = new ArrayList<>();
        boolean vis[] = new boolean[V];
        dfs(0,list,vis,adj);
        return list;
    }
    
	public static void main(String args[]) {

		ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
		for (int i = 0; i < 5; i++) {
			adj.add(new ArrayList<>());
		}
		adj.get(0).add(1);
		adj.get(1).add(0);
		adj.get(0).add(4);
		adj.get(4).add(0);
		adj.get(1).add(2);
		adj.get(2).add(1);
		adj.get(1).add(3);
		adj.get(3).add(1);

		ArrayList<Integer> ans = dfsTraversal(5, adj);
		int n = ans.size();
		for (int i = 0; i < n; i++) {
			System.out.print(ans.get(i) + " ");
		}
	}
}
